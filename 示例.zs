// 中文编程示例
// 这个文件展示了如何使用中文编程语言

// 1. 变量和常量
变量 计数 = 0;
常量 最大值 = 100;
变量 名字 = "张三";
变量 是否完成 = 假;

// 2. 函数定义
函数 计算阶乘(数字) {
  如果 (数字 <= 1) {
    返回 1;
  }
  返回 数字 * 计算阶乘(数字 - 1);
}

函数 打印消息(消息) {
  输出("消息: " + 消息);
}

// 3. 条件语句
变量 分数 = 85;

如果 (分数 >= 90) {
  打印消息("优秀");
} 否则如果 (分数 >= 80) {
  打印消息("良好");
} 否则如果 (分数 >= 60) {
  打印消息("及格");
} 否则 {
  打印消息("不及格");
}

// 4. 循环语句
输出("循环示例:");
循环 (变量 i = 0; i < 5; i++) {
  输出("循环计数: " + i);
}

输出("当循环示例:");
变量 j = 0;
当 (j < 3) {
  输出("当前j值: " + j);
  j++;
}

// 5. 数组和对象
变量 水果列表 = ["苹果", "香蕉", "橙子"];
输出("水果列表的第一项: " + 水果列表[0]);

变量 学生 = {
  姓名: "李四",
  年龄: 18,
  成绩: [95, 85, 90]
};
输出("学生姓名: " + 学生.姓名);
输出("学生平均成绩: " + (学生.成绩[0] + 学生.成绩[1] + 学生.成绩[2]) / 3);

// 6. 阶乘函数调用
变量 阶乘结果 = 计算阶乘(5);
输出("5的阶乘结果: " + 阶乘结果);  // 应该输出120

// 7. 异常处理
尝试 {
  变量 x = 10 / 0;  // 除以零错误
  输出("这行不会执行");
} 捕获 (错误) {
  输出("捕获到错误: " + 错误.message);
}

// 8. 定时器示例
输出("程序执行完毕，等待3秒后将显示另一条消息...");
定时器(() => {
  输出("3秒后的消息!");
}, 3000); 